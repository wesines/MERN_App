{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN_App\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getListUsers } from '../../actions/listUsers';\nimport { PropTypes } from 'prop-types';\nimport Spinner from '../layout/Spinner';\nexport const Dashboard = ({\n  getListUsers,\n  auth: {\n    user\n  },\n  listUsers: {\n    listUsers,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getListUsers();\n  }, []);\n  return loading && listUsers === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), \"Welcome \", user && user.firstname));\n};\nDashboard.propTypes = {\n  getListUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  listUsers: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  listUsers: state.listUsers\n});\n\nexport default connect(mapStateToProps, {\n  getListUsers\n})(Dashboard);","map":{"version":3,"sources":["E:/MERN_App/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","Redirect","connect","getListUsers","PropTypes","Spinner","Dashboard","auth","user","listUsers","loading","firstname","propTypes","func","isRequired","object","array","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACxBH,EAAAA,YADwB;AAExBI,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFkB;AAGxBC,EAAAA,SAAS,EAAE;AAAEA,IAAAA,SAAF;AAAaC,IAAAA;AAAb;AAHa,CAAD,KAInB;AACJZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOO,OAAO,IAAID,SAAS,KAAK,IAAzB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,cAEWD,IAAI,IAAIA,IAAI,CAACG,SAFxB,CAFF,CAHF;AAWD,CAnBM;AAqBPL,SAAS,CAACM,SAAV,GAAsB;AACpBT,EAAAA,YAAY,EAAEC,SAAS,CAACS,IAAV,CAAeC,UADT;AAEpBP,EAAAA,IAAI,EAAEH,SAAS,CAACW,MAAV,CAAiBD,UAFH;AAGpBL,EAAAA,SAAS,EAAEL,SAAS,CAACY,KAAV,CAAgBF;AAHP,CAAtB;;AAKA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADsB;AAElCE,EAAAA,SAAS,EAAES,KAAK,CAACT;AAFiB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA2CG,SAA3C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getListUsers } from '../../actions/listUsers';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nexport const Dashboard = ({\r\n  getListUsers,\r\n  auth: { user },\r\n  listUsers: { listUsers, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getListUsers();\r\n  }, []);\r\n  return loading && listUsers === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Users</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>\r\n        Welcome {user && user.firstname}\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getListUsers: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  listUsers: PropTypes.array.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  listUsers: state.listUsers,\r\n});\r\nexport default connect(mapStateToProps, { getListUsers })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}