{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN_App\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FileUpload from './Fileuploaded/FileUpload';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/* eslint-disable import/first */\n// eslint-disable-next-line no-restricted-globals\n// eslint-disable-next-line\n\nimport { setAlert } from '../../actions/alert'; //la fonction register de l'action auth\n\nimport { register } from '../../actions/auth';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  //for states, an object that contains fields values : formData\n  //function we ll used to update fields\n  const [formData, setFormData] = useState({\n    lastname: '',\n    firstname: '',\n    email: '',\n    password: '',\n    password2: '',\n    avatar: '',\n    status: '',\n    readterms: false,\n    subscribe: false\n  });\n  const {\n    lastname,\n    firstname,\n    email,\n    avatar,\n    password,\n    password2,\n    status,\n    readterms,\n    subscribe\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    //pour que la page ne se recharge pas\n    e.preventDefault();\n\n    if (formData.password !== formData.password2) {\n      setAlert('password do not match ', 'danger');\n    } else {\n      register({\n        firstname,\n        lastname,\n        email,\n        avatar,\n        password,\n        status,\n        readterms,\n        subscribe\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Registration\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \" font-size: 1.5rem,  margin-bottom: 1rem;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), \" Create Your Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"FirstName\",\n    name: \"firstname\" //   required\n    ,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"LastName\",\n    name: \"lastname\",\n    value: lastname //   required\n    ,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email //   required\n    ,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password //  required\n    ,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2 //   required\n    ,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"status\",\n    value: status,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"--- Select a status ---\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Teacher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Teacher\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Assistant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Assistant\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Student\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Student\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox custom-control-inline\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-control-input\",\n    id: \"defaultInline1\" //  style={{ marginLeft: -510 }}\n    ,\n    type: \"checkbox\",\n    name: \"nomSub\",\n    checked: formData.subscribe,\n    onChange: e => setFormData({ ...formData,\n      subscribe: e.target.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"defaultInline1\",\n    style: {\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Subcribe to our newsletter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox custom-control-inline\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-control-input\",\n    id: \"defaultInline2\",\n    name: \"nomRead\",\n    type: \"checkbox\",\n    checked: formData.readterms,\n    onChange: e => setFormData({ ...formData,\n      readterms: e.target.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"defaultInline2\",\n    style: {\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"I have read terms and conditions\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 34\n    }\n  }, \"Sign In\")));\n}; //ptfr et entree\n\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register); //connect has two arguments:\n// any  state that you want to map you can put null\n// an object that with any action you wanna use","map":{"version":3,"sources":["E:/MERN_App/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","Redirect","PropTypes","FileUpload","setAlert","register","Register","isAuthenticated","formData","setFormData","lastname","firstname","email","password","password2","avatar","status","readterms","subscribe","onChange","e","target","name","value","onSubmit","preventDefault","checked","marginLeft","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport FileUpload from './Fileuploaded/FileUpload';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n/* eslint-disable import/first */\r\n// eslint-disable-next-line no-restricted-globals\r\n// eslint-disable-next-line\r\nimport { setAlert } from '../../actions/alert';\r\n//la fonction register de l'action auth\r\nimport { register } from '../../actions/auth';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  //for states, an object that contains fields values : formData\r\n  //function we ll used to update fields\r\n  const [formData, setFormData] = useState({\r\n    lastname: '',\r\n    firstname: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    avatar: '',\r\n    status: '',\r\n    readterms: false,\r\n    subscribe: false,\r\n  });\r\n  const {\r\n    lastname,\r\n    firstname,\r\n    email,\r\n    avatar,\r\n    password,\r\n    password2,\r\n    status,\r\n    readterms,\r\n    subscribe,\r\n  } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    //pour que la page ne se recharge pas\r\n    e.preventDefault();\r\n\r\n    if (formData.password !== formData.password2) {\r\n      setAlert('password do not match ', 'danger');\r\n    } else {\r\n      register({\r\n        firstname,\r\n        lastname,\r\n        email,\r\n        avatar,\r\n        password,\r\n        status,\r\n        readterms,\r\n        subscribe,\r\n      });\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/users' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='text-info'>Registration</h1>\r\n      <p className=' font-size: 1.5rem,  margin-bottom: 1rem;'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='FirstName'\r\n            name='firstname'\r\n            //   required\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='LastName'\r\n            name='lastname'\r\n            value={lastname}\r\n            //   required\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            //   required\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            //  required\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            //   required\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option>--- Select a status ---</option>\r\n            <option value='Teacher'>Teacher</option>\r\n            <option value='Assistant'>Assistant</option>\r\n            <option value='Student'>Student</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div\r\n          className='custom-control custom-checkbox custom-control-inline'\r\n          className='form-group'\r\n        >\r\n          <input\r\n            className='custom-control-input'\r\n            id='defaultInline1'\r\n            //  style={{ marginLeft: -510 }}\r\n            type='checkbox'\r\n            name='nomSub'\r\n            checked={formData.subscribe}\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                subscribe: e.target.checked,\r\n              })\r\n            }\r\n          />\r\n\r\n          <label\r\n            className='custom-control-label'\r\n            htmlFor='defaultInline1'\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            Subcribe to our newsletter\r\n          </label>\r\n        </div>\r\n        <div\r\n          className='custom-control custom-checkbox custom-control-inline'\r\n          className='form-group'\r\n        >\r\n          <input\r\n            className='custom-control-input'\r\n            id='defaultInline2'\r\n            name='nomRead'\r\n            type='checkbox'\r\n            checked={formData.readterms}\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                readterms: e.target.checked,\r\n              })\r\n            }\r\n          />\r\n          <label\r\n            className='custom-control-label'\r\n            htmlFor='defaultInline2'\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            I have read terms and conditions\r\n          </label>\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n//ptfr et entree\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n//connect has two arguments:\r\n// any  state that you want to map you can put null\r\n// an object that with any action you wanna use\r\n"]},"metadata":{},"sourceType":"module"}