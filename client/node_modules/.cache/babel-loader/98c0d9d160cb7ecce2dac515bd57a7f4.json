{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN_App\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getListUsers } from '../../actions/listUsers';\nimport { PropTypes } from 'prop-types';\nimport Spinner from '../layout/Spinner';\nexport const Dashboard = ({\n  getListUsers,\n  auth: {\n    user\n  },\n  listUsers: {\n    listUsers,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getListUsers();\n  }, []);\n  return loading && listUsers === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), listUsers !== null && listUsers.length > 0 && listUsers.map(list => /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    key: list._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, ' ', list.firstname, \" \", list.lastname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"list.avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/user/id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), '')))))));\n};\nDashboard.propTypes = {\n  getListUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  listUsers: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  listUsers: state.listUsers\n});\n\nexport default connect(mapStateToProps, {\n  getListUsers\n})(Dashboard);","map":{"version":3,"sources":["E:/MERN_App/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","Redirect","connect","getListUsers","PropTypes","Spinner","Dashboard","auth","user","listUsers","loading","length","map","list","_id","firstname","lastname","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACxBH,EAAAA,YADwB;AAExBI,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFkB;AAGxBC,EAAAA,SAAS,EAAE;AAAEA,IAAAA,SAAF;AAAaC,IAAAA;AAAb;AAHa,CAAD,KAInB;AACJZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOO,OAAO,IAAID,SAAS,KAAK,IAAzB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGA,SAAS,KAAK,IAAd,IACCA,SAAS,CAACE,MAAV,GAAmB,CADpB,IAECF,SAAS,CAACG,GAAV,CAAeC,IAAD,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGD,IAAI,CAACE,SAFR,OAEoBF,IAAI,CAACG,QAFzB,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,EAFH,CADF,CARF,CADF,CADF,CAJJ,CAFF,CAHF;AA+BD,CAvCM;AAyCPV,SAAS,CAACW,SAAV,GAAsB;AACpBd,EAAAA,YAAY,EAAEC,SAAS,CAACc,IAAV,CAAeC,UADT;AAEpBZ,EAAAA,IAAI,EAAEH,SAAS,CAACgB,MAAV,CAAiBD,UAFH;AAGpBV,EAAAA,SAAS,EAAEL,SAAS,CAACgB,MAAV,CAAiBD;AAHR,CAAtB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,IAAI,EAAEe,KAAK,CAACf,IADsB;AAElCE,EAAAA,SAAS,EAAEa,KAAK,CAACb;AAFiB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA2CG,SAA3C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getListUsers } from '../../actions/listUsers';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport const Dashboard = ({\r\n  getListUsers,\r\n  auth: { user },\r\n  listUsers: { listUsers, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getListUsers();\r\n  }, []);\r\n  return loading && listUsers === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Users</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>\r\n        {listUsers !== null &&\r\n          listUsers.length > 0 &&\r\n          listUsers.map((list) => (\r\n            <table>\r\n              <tr>\r\n                <td key={list._id}>\r\n                  {' '}\r\n                  {list.firstname} {list.lastname}\r\n                </td>\r\n                <td>\r\n                  <img src='list.avatar' />\r\n                </td>\r\n                <td>\r\n                  <Link to='/user/id'>\r\n                    <i className='fas fa-user-edit' />\r\n                    {''}\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          ))}\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getListUsers: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  listUsers: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  listUsers: state.listUsers,\r\n});\r\nexport default connect(mapStateToProps, { getListUsers })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}